Component Task <init> {
  init      -> zero            -> executing
  init      -> other           -> waiting
  waiting   -> getReady        -> ready
  ready     -> startExecution  -> executing
  executing -> getPreempted    -> preempted
  preempted -> resumeExecution -> executing
  executing -> stopExecution   -> waiting
  waiting   -> isWaiting       -> waiting
  ready     -> isReady         -> ready
  executing -> isExecuting     -> executing
}

Formula {
          zero(root) broadcasting { j: root < j. other(j) };
          getReady(i);
  i < j . startExecution(i) & getPreempted(j);
  i < j . stopExecution(i)  & resumeExecution(j) broadcasting{ k: j < k . isWaiting(k) | isReady(k) | isExecuting(k) };
}

property "nomutex" {
  "ex1 i, j: i in U & j in U & i ~= j & i in executing & j in executing"
}

assumption "linear" {
  "all1 x: x in U => last1(x)"
}
