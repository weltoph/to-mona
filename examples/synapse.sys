Component Cell <invalid> {
  invalid -> validateInvalid -> valid
  dirty   -> validateDirty   -> valid

  dirty   -> invalidateDirty -> invalid
  valid   -> invalidateValid -> invalid

  valid   -> taintValid      -> dirty
  invalid -> taintInvalid    -> dirty

  invalid -> isInvalid       -> invalid
  dirty   -> isDirty         -> dirty
  valid   -> isValid         -> valid
}


Formula {
  # Symbol W

  ## state invalid
  taintInvalid(i) broadcasting { o: o ~= i. isInvalid(o)
                                          | invalidateDirty(o)
                                          | invalidateValid(o) };
  ## state dirty
  isDirty(i) broadcasting { o: o ~= i. isInvalid(o)
                                     | invalidateDirty(o)
                                     | invalidateValid(o) };

  ## state valid
  taintValid(i) broadcasting { o: o ~= i. isInvalid(o)
                                        | invalidateDirty(o)
                                        | invalidateValid(o) };

  # Symbol R

  ## state invalid
  validateInvalid(i) broadcasting { o: o ~= i. isInvalid(o)
                                             | isValid(o)
                                             | invalidateDirty(o) };

  ## state dirty
  isDirty(i) broadcasting { o: o ~= i. isInvalid(o)
                                     | isValid(o)
                                     | invalidateDirty(o) };

  ## state valid
  isValid(i) broadcasting { o: o ~= i. isInvalid(o)
                                     | isValid(o)
                                     | invalidateDirty(o) };
}

property "dirtydirty" {
  "ex1 i, j: 0 <= i & i < n & 0 <= j & j < n & i ~= j & (i in dirty & j in dirty)"
}

property "dirtyvalid" {
  "ex1 i, j: 0 <= i & i < n & 0 <= j & j < n & i ~= j & (i in dirty & j in valid)"
}
