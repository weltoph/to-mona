Component philosopher
initial waiting;
waiting -> grabFirst -> hungry;
hungry -> grabSecond -> eating;
eating -> dropBoth  -> waiting;

Component fork
initial free;
free -> grabbed -> busy;
busy -> released -> free;

Formula
ex p: 0 < p.grabFirst(p) & grabbed(p);
ex p: 0 < p.grabSecond(p) & grabbed(succ(p));
ex p: 0 = p.grabFirst(p) & grabbed(succ(p));
ex p: 0 = p.grabSecond(p) & grabbed(p);
ex p: true.released(p) & dropBoth(p) & released(succ(p));
