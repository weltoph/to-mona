{% import 'macros.mona' as macros %}
# {{ clause }}
{% macro uniquely_intersects_predicate(clause, region) -%}
{% call macros.pred_def("uniquely_intersects_" ~ region ~ "_transition_" ~ clause.index, clause.bound_to.states, clause.existential_terms) -%}
(
  (
  {{ macros.unique_in_existentials(clause, region) }}
  )
  {%- if clause.broadcasts -%}
  {{- '\n' }}& (
    {{ macros.empty_in_broadcasts(clause, region) }}
  )
  {%- endif -%}
)
{%- if clause.broadcasts -%}
{{- '\n' }}| (
  (
    {{ macros.disjoint_in_existentials(clause, region) }}
  ) & (
    {{ macros.unique_in_broadcasts(clause, region) }}
  )
)
{%- endif -%}
{%- endcall %}
{%- endmacro %}

{{ uniquely_intersects_predicate(clause, "origin") }}

{{ uniquely_intersects_predicate(clause, "target") }}
