{% import "macros.mona" as macros %}

{% call macros.pred_def("marking", formula.bound_to.states) -%}
all1 m: (0 <= m & m < n) => (
  {% call(component) macros.blockify("&", formula.bound_to.components, indentation_depth=2) -%}
  {% call(positive_state) macros.blockify("|", component.states, indentation_depth=4) -%}
  m in {{ positive_state }}
  {%- if component.states|length > 1 -%}
  {{ '\n' }}& (
    {% call(other_state) macros.blockify("&", component.states|reject("sameas", positive_state)) -%}
    m notin {{ other_state }}
    {%- endcall %}
  )
  {%- endif -%}
  {%- endcall %}
  {%- endcall %}
)
{%- endcall %}
