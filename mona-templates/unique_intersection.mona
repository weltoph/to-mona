{% import 'macros.mona' as macros %}

{% call macros.pred_def_extended("unique_intersection", ("var2 One", formula.bound_to.states), ("var2 Two", formula.bound_to.states)) -%}
  ex1 h: (0 <= h & h < n) & (
    (
      {% call(intersecting_state) macros.blockify("|", formula.bound_to.states, indentation_depth=6) -%}
      h in One{{ intersecting_state }} & h in Two{{ intersecting_state }}
      {%- if formula.bound_to.states|length > 1 -%}
      {{ '\n' }}& (
        {% call(other_state) macros.blockify("&", formula.bound_to.states|reject("sameas", intersecting_state), indentation_depth=8) -%}
        h notin One{{ other_state }} | h notin Two{{ other_state }}
        {%- endcall %}
      )
      {%- endif -%}
      {%- endcall %}
    ) & all1 hh: (
      (
        (0 <= hh & hh < n) & (
        {% call(s) macros.blockify("|", formula.bound_to.states, indentation_depth=8) -%}
        hh in One{{ s }} & hh in Two{{ s }}
        {%- endcall %}
      ) => ( h = hh )
    )
  )
)
{%- endcall %}
